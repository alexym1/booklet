[{"path":[]},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement yahiaoui-martinez.alex@outlook.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://alexym1.github.io/booklet/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to booklet","title":"Contributing to booklet","text":"outlines propose change booklet.","code":""},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to booklet","text":"Small typos grammatical errors documentation edited directly using GitHub web interface. Please, changes made commit pull request.","code":""},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to booklet","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal example.","code":""},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":"reports-bugs","dir":"","previous_headings":"","what":"Reports bugs","title":"Contributing to booklet","text":"Report bugs https://github.com/alexym1/booklet/issues.","code":""},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Contributing to booklet","text":"Clone repo Create branch latest master main branch. Set reproducible environment using renv::restore() package. Check changes, please add unit tests Check coverage. coverage least 90%. Run devtools::check() ensure code meets package’s standards. Fix errors, warnings notes may appear. (optional) New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. Push remote source:","code":"git clone git@github.com:alexym1/booklet.git # Run this command to validate your tests testthat::test_dir(\"tests/testthat\") detach(\"package:booklet\", unload=TRUE) covr::package_coverage() git push origin <your_branch_name>"},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":"pull-request","dir":"","previous_headings":"","what":"Pull request","title":"Contributing to booklet","text":"Check unit tests package’s standards (see Contribution) user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s). Create pull request <your_branch_name> master main. Copy/Paste latest bullet NEWS.md PR description. Bump version following files: Description NEWS.md README.Rmd version number format x.y.z. change bug fix, update z. change enhancement, update y. change breaking change, update x. Confirm PR remove merged branch. CI files check code coverage update website.","code":"# Update the existing NEWS.md file pkgdown::build_site()"},{"path":"https://alexym1.github.io/booklet/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to booklet","text":"participating project agree abide terms.","code":""},{"path":"https://alexym1.github.io/booklet/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Alex MARTINEZ Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alexym1.github.io/booklet/articles/Comparison.html","id":"eigs","dir":"Articles","previous_headings":"","what":"Eigs","title":"Comparison with FactoMineR","text":"","code":"# Get eigvalues and eigvectors with FactoMineR X <- decathlon[, -c(11:13)] res_pca <- PCA(X, quanti.sup = 10, ind.sup = 1, graph = FALSE) head(res_pca$eig) #>        eigenvalue percentage of variance cumulative percentage of variance #> comp 1  3.2817473              36.463859                          36.46386 #> comp 2  1.6893625              18.770694                          55.23455 #> comp 3  1.0648909              11.832121                          67.06667 #> comp 4  0.8572889               9.525432                          76.59211 #> comp 5  0.6349252               7.054725                          83.64683 #> comp 6  0.4677351               5.197057                          88.84389 # Get eigvalues and eigvectors with booklet X_active <- X[-1, -10] X_active_scaled <- pca_standardize(X_active, scale = TRUE)  eigs <- pca_weighted_eigen(X_active_scaled)  df_eigs <- data.frame(   eigenvalue = eigs$values,   `percentage of variance` = eigs$values / sum(eigs$values) * 100,   `cumulative percentage of variance` = cumsum(eigs$values / sum(eigs$values)) * 100 )  rownames(df_eigs) <- paste0(\"comp \", 1:nrow(df_eigs))  df_eigs |> head() #>        eigenvalue percentage.of.variance cumulative.percentage.of.variance #> comp 1  3.2817473              36.463859                          36.46386 #> comp 2  1.6893625              18.770694                          55.23455 #> comp 3  1.0648909              11.832121                          67.06667 #> comp 4  0.8572889               9.525432                          76.59211 #> comp 5  0.6349252               7.054725                          83.64683 #> comp 6  0.4677351               5.197057                          88.84389"},{"path":[]},{"path":"https://alexym1.github.io/booklet/articles/Comparison.html","id":"individuals","dir":"Articles","previous_headings":"PCA","what":"Individuals","title":"Comparison with FactoMineR","text":"","code":"# Get principal components with FactoMineR head(res_pca$ind$coord) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY       1.3100544 -0.4159492  0.5208056  0.369856466 -2.17766124 #> KARPOV     1.4371854 -0.4206194 -0.9485451  2.055098128 -0.08739926 #> BERNARD   -0.6048025 -1.1039234  2.2461329 -0.308551094  0.52147527 #> YURKOV    -0.5701719  2.4598460  0.6145443  0.002631539  1.26970612 #> WARNERS    0.3739047 -1.8369980 -0.4725537  0.728066088  0.69493980 #> ZSIVOCZKY  0.2692284 -0.4794763 -1.9969562 -0.258190426 -0.13749027 # Get principal components with booklet ind_coords <- pca_ind_coords(eigs) head(ind_coords[, 1:5]) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY       1.3100544 -0.4159492  0.5208056  0.369856466 -2.17766124 #> KARPOV     1.4371854 -0.4206194 -0.9485451  2.055098128 -0.08739926 #> BERNARD   -0.6048025 -1.1039234  2.2461329 -0.308551094  0.52147527 #> YURKOV    -0.5701719  2.4598460  0.6145443  0.002631539  1.26970612 #> WARNERS    0.3739047 -1.8369980 -0.4725537  0.728066088  0.69493980 #> ZSIVOCZKY  0.2692284 -0.4794763 -1.9969562 -0.258190426 -0.13749027 # Get individual cos2 with FactoMineR head(res_pca$ind$cos2) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      0.20619906 0.02078684 0.03258812 1.643518e-02 0.569755684 #> KARPOV    0.25723191 0.02203321 0.11205086 5.259741e-01 0.000951294 #> BERNARD   0.04764941 0.15874795 0.65720548 1.240179e-02 0.035424009 #> YURKOV    0.03581693 0.66664184 0.04160860 7.629506e-07 0.177616436 #> WARNERS   0.02392091 0.57739535 0.03820834 9.069796e-02 0.082632386 #> ZSIVOCZKY 0.01324414 0.04200650 0.72865053 1.218043e-02 0.003454030 # Get individual cos2 with booklet ind_cos2 <- pca_ind_cos2(ind_coords) head(ind_cos2[, 1:5]) #>                Dim.1      Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      0.20619906 0.02078684 0.03258812 1.643518e-02 0.569755684 #> KARPOV    0.25723191 0.02203321 0.11205086 5.259741e-01 0.000951294 #> BERNARD   0.04764941 0.15874795 0.65720548 1.240179e-02 0.035424009 #> YURKOV    0.03581693 0.66664184 0.04160860 7.629506e-07 0.177616436 #> WARNERS   0.02392091 0.57739535 0.03820834 9.069796e-02 0.082632386 #> ZSIVOCZKY 0.01324414 0.04200650 0.72865053 1.218043e-02 0.003454030 # Get individual contributions with FactoMineR head(res_pca$ind$contrib) #>                Dim.1     Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      1.30741518 0.2560340  0.6367752 3.989140e-01 18.67231141 #> KARPOV    1.57347720 0.2618157  2.1122769 1.231623e+01  0.03007689 #> BERNARD   0.27865195 1.8034123 11.8442024 2.776304e-01  1.07074211 #> YURKOV    0.24765466 8.9543282  0.8866277 2.019447e-05  6.34780926 #> WARNERS   0.10650172 4.9938388  0.5242485 1.545804e+00  1.90156779 #> ZSIVOCZKY 0.05521748 0.3402134  9.3620727 1.943986e-01  0.07443229 # Get individual contributions with booklet ind_contrib <- pca_ind_contrib(ind_coords, eigs) head(ind_contrib[, 1:5]) #>                Dim.1     Dim.2      Dim.3        Dim.4       Dim.5 #> CLAY      1.30741518 0.2560340  0.6367752 3.989140e-01 18.67231141 #> KARPOV    1.57347720 0.2618157  2.1122769 1.231623e+01  0.03007689 #> BERNARD   0.27865195 1.8034123 11.8442024 2.776304e-01  1.07074211 #> YURKOV    0.24765466 8.9543282  0.8866277 2.019447e-05  6.34780926 #> WARNERS   0.10650172 4.9938388  0.5242485 1.545804e+00  1.90156779 #> ZSIVOCZKY 0.05521748 0.3402134  9.3620727 1.943986e-01  0.07443229"},{"path":"https://alexym1.github.io/booklet/articles/Comparison.html","id":"supplementary-individuals","dir":"Articles","previous_headings":"PCA","what":"Supplementary individuals","title":"Comparison with FactoMineR","text":"","code":"# Get supplementary individuals with FactoMineR res_pca$ind.sup$coord #>            Dim.1     Dim.2    Dim.3     Dim.4    Dim.5 #> SEBRLE 0.8344973 0.3186264 1.214558 -0.201484 1.281883 # Get supplementary individuals with booklet weights <- rep(1, nrow(X_active)) / nrow(X_active) center <- colMeans(X_active) std <- sqrt(as.vector(crossprod(weights, as.matrix(X_active^2)) - center^2))  X_sup <- X[1, -10] X_sup_scaled <- (X_sup - center) / std ind_sup_coords <- as.data.frame(as.matrix(X_sup_scaled) %*% eigs$vectors) rownames(ind_sup_coords) <- rownames(X_sup) ind_sup_coords[, 1:5] #>            Dim.1     Dim.2    Dim.3     Dim.4    Dim.5 #> SEBRLE 0.8344973 0.3186264 1.214558 -0.201484 1.281883 # Get supplementary individuals cos2 with FactoMineR res_pca$ind.sup$cos2 #>            Dim.1      Dim.2     Dim.3       Dim.4     Dim.5 #> SEBRLE 0.1505617 0.02194968 0.3189345 0.008776992 0.3552722 # Get supplementary individuals cos2 with booklet ind_sup_cos2 <- pca_ind_cos2(ind_sup_coords) ind_sup_cos2[, 1:5] #>            Dim.1      Dim.2     Dim.3       Dim.4     Dim.5 #> SEBRLE 0.1505617 0.02194968 0.3189345 0.008776992 0.3552722"},{"path":"https://alexym1.github.io/booklet/articles/Comparison.html","id":"variables","dir":"Articles","previous_headings":"PCA","what":"Variables","title":"Comparison with FactoMineR","text":"","code":"# Get variable coordinates with FactoMineR head(res_pca$var$coord) #>                  Dim.1      Dim.2       Dim.3       Dim.4       Dim.5 #> 100m        -0.7802087  0.2474540 -0.07802294  0.15739065  0.10348090 #> Long.jump    0.7418925 -0.4073126  0.05696965 -0.10200465  0.12853454 #> Shot.put     0.6230146  0.5713999  0.28623659  0.22239225 -0.02547125 #> High.jump    0.5704197  0.4191676 -0.24210464  0.09178538  0.63728214 #> 400m        -0.6756524  0.4720254  0.12379407  0.12444012 -0.02216888 #> 110m.hurdle -0.7510101  0.2498147  0.23834558 -0.06295776  0.22508937 # Get variable coordinates with booklet var_coords <- pca_var_coords(eigs) head(var_coords[, 1:5]) #>                  Dim.1      Dim.2       Dim.3       Dim.4       Dim.5 #> 100m        -0.7802087  0.2474540 -0.07802294  0.15739065  0.10348090 #> Long.jump    0.7418925 -0.4073126  0.05696965 -0.10200465  0.12853454 #> Shot.put     0.6230146  0.5713999  0.28623659  0.22239225 -0.02547125 #> High.jump    0.5704197  0.4191676 -0.24210464  0.09178538  0.63728214 #> 400m        -0.6756524  0.4720254  0.12379407  0.12444012 -0.02216888 #> 110m.hurdle -0.7510101  0.2498147  0.23834558 -0.06295776  0.22508937 # Get variable cos2 with FactoMineR head(res_pca$var$cos2) #>                 Dim.1      Dim.2       Dim.3       Dim.4        Dim.5 #> 100m        0.6087256 0.06123346 0.006087579 0.024771818 0.0107082970 #> Long.jump   0.5504045 0.16590352 0.003245541 0.010404949 0.0165211277 #> Shot.put    0.3881471 0.32649781 0.081931386 0.049458311 0.0006487846 #> High.jump   0.3253787 0.17570146 0.058614658 0.008424556 0.4061285259 #> 400m        0.4565061 0.22280802 0.015324971 0.015485343 0.0004914592 #> 110m.hurdle 0.5640162 0.06240739 0.056808617 0.003963679 0.0506652236 # Get variable cos2 with booklet var_cos2 <- pca_var_cos2(var_coords) head(var_cos2[, 1:5]) #>                 Dim.1      Dim.2       Dim.3       Dim.4        Dim.5 #> 100m        0.6087256 0.06123346 0.006087579 0.024771818 0.0107082970 #> Long.jump   0.5504045 0.16590352 0.003245541 0.010404949 0.0165211277 #> Shot.put    0.3881471 0.32649781 0.081931386 0.049458311 0.0006487846 #> High.jump   0.3253787 0.17570146 0.058614658 0.008424556 0.4061285259 #> 400m        0.4565061 0.22280802 0.015324971 0.015485343 0.0004914592 #> 110m.hurdle 0.5640162 0.06240739 0.056808617 0.003963679 0.0506652236 # Get variable contributions with FactoMineR head(res_pca$var$contrib) #>                Dim.1     Dim.2     Dim.3     Dim.4       Dim.5 #> 100m        18.54882  3.624649 0.5716623 2.8895531  1.68654464 #> Long.jump   16.77169  9.820481 0.3047769 1.2137039  2.60205888 #> Shot.put    11.82745 19.326688 7.6938764 5.7691535  0.10218284 #> High.jump    9.91480 10.400459 5.5042879 0.9826975 63.96478233 #> 400m        13.91046 13.188882 1.4391119 1.8063156  0.07740427 #> 110m.hurdle 17.18646  3.694139 5.3346892 0.4623504  7.97971527 # Get variable contributions with booklet var_contrib <- pca_var_contrib(var_cos2, eigs) head(var_contrib[, 1:5]) #>                Dim.1     Dim.2     Dim.3     Dim.4       Dim.5 #> 100m        18.54882  3.624649 0.5716623 2.8895531  1.68654464 #> Long.jump   16.77169  9.820481 0.3047769 1.2137039  2.60205888 #> Shot.put    11.82745 19.326688 7.6938764 5.7691535  0.10218284 #> High.jump    9.91480 10.400459 5.5042879 0.9826975 63.96478233 #> 400m        13.91046 13.188882 1.4391119 1.8063156  0.07740427 #> 110m.hurdle 17.18646  3.694139 5.3346892 0.4623504  7.97971527"},{"path":"https://alexym1.github.io/booklet/articles/Comparison.html","id":"supplementary-variables","dir":"Articles","previous_headings":"PCA","what":"Supplementary variables","title":"Comparison with FactoMineR","text":"","code":"# Get supplementary variables coordinates with FactoMineR res_pca$quanti.sup$coord #>             Dim.1     Dim.2     Dim.3     Dim.4      Dim.5 #> 1500m -0.05231146 0.1142921 0.1396336 0.4621371 -0.1964609 # Get supplementary CONTINUOUS variables coordinates with booklet X_sup <- X[-1, 10, drop = FALSE] X_sup_scaled <- pca_standardize(X_sup, scale = TRUE)  var_sup_coords <- as.data.frame(t(X_sup_scaled * weights) %*% eigs$U) rownames(var_sup_coords) <- colnames(X_sup) var_sup_coords[, 1:5] #>             Dim.1     Dim.2     Dim.3     Dim.4      Dim.5 #> 1500m -0.05231146 0.1142921 0.1396336 0.4621371 -0.1964609 # Get supplementary variables cos2 with FactoMineR res_pca$quanti.sup$cos2 #>             Dim.1      Dim.2      Dim.3     Dim.4      Dim.5 #> 1500m 0.002736489 0.01306268 0.01949755 0.2135707 0.03859689 # Get supplementary variables cos2 with booklet var_sup_cos2 <- pca_var_cos2(var_sup_coords) var_sup_cos2[, 1:5] #>             Dim.1      Dim.2      Dim.3     Dim.4      Dim.5 #> 1500m 0.002736489 0.01306268 0.01949755 0.2135707 0.03859689"},{"path":"https://alexym1.github.io/booklet/articles/booklet.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to booklet","text":"R package booklet designed multivariate data analysis. offers wide array statistical techniques exploratory data analysis, including principal component analysis (PCA). booklet user-friendly provides comprehensive tools visualizing interpreting complex data structures, making valuable resource researchers data analysts.","code":"library(booklet) X <- iris[, 1:4] head(X) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1          5.1         3.5          1.4         0.2 #> 2          4.9         3.0          1.4         0.2 #> 3          4.7         3.2          1.3         0.2 #> 4          4.6         3.1          1.5         0.2 #> 5          5.0         3.6          1.4         0.2 #> 6          5.4         3.9          1.7         0.4"},{"path":"https://alexym1.github.io/booklet/articles/booklet.html","id":"standardize-the-dataset","dir":"Articles","previous_headings":"","what":"Standardize the dataset","title":"Introduction to booklet","text":"performing PCA, important standardize dataset. ensures variables scale, necessary accurate results. example, dataset standardized subtracting mean dividing standard deviation. (X−X‾)/σ (X - \\bar{X}) / \\sigma","code":"X_scaled <- pca_standardize_norm(X, center = TRUE, scale = TRUE) head(X_scaled) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1   -0.8976739  1.01560199    -1.335752   -1.311052 #> 2   -1.1392005 -0.13153881    -1.335752   -1.311052 #> 3   -1.3807271  0.32731751    -1.392399   -1.311052 #> 4   -1.5014904  0.09788935    -1.279104   -1.311052 #> 5   -1.0184372  1.24503015    -1.335752   -1.311052 #> 6   -0.5353840  1.93331463    -1.165809   -1.048667"},{"path":"https://alexym1.github.io/booklet/articles/booklet.html","id":"compute-eigenvalues","dir":"Articles","previous_headings":"","what":"Compute eigenvalues","title":"Introduction to booklet","text":"next step compute eigenvalues eigenvectors covariance matrix. done using get_eigen() function R. eigenvalues represent variance explained principal component, eigenvectors represent direction principal components original feature space.","code":"eigs <- pca_eigen(X_scaled)"},{"path":"https://alexym1.github.io/booklet/articles/booklet.html","id":"perform-pca","dir":"Articles","previous_headings":"","what":"Perform PCA","title":"Introduction to booklet","text":"Finally, can perform principal component analysis (PCA) standardized dataset. reduce dimensionality data identify principal components explain variance.","code":"# You can also use the `pca_ind_coords()` function. ind_coords <- t(t(as.matrix(eigs[[\"U\"]])) * sqrt(eigs[[\"values\"]])) head(ind_coords) #>       Dim.1      Dim.2       Dim.3        Dim.4 #> 1 -2.257141 -0.4784238  0.12727962  0.024087508 #> 2 -2.074013  0.6718827  0.23382552  0.102662845 #> 3 -2.356335  0.3407664 -0.04405390  0.028282305 #> 4 -2.291707  0.5953999 -0.09098530 -0.065735340 #> 5 -2.381863 -0.6446757 -0.01568565 -0.035802870 #> 6 -2.068701 -1.4842053 -0.02687825  0.006586116"},{"path":"https://alexym1.github.io/booklet/articles/extensions.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Data visualization with factoextra","text":"","code":"X <- decathlon[, -c(11:13)] res_pca <- facto_pca(X, ncp = 5, quanti_sup = 10)"},{"path":"https://alexym1.github.io/booklet/articles/extensions.html","id":"eigs","dir":"Articles","previous_headings":"","what":"Eigs","title":"Data visualization with factoextra","text":"","code":"fviz_eig(res_pca)"},{"path":"https://alexym1.github.io/booklet/articles/extensions.html","id":"individuals","dir":"Articles","previous_headings":"","what":"Individuals","title":"Data visualization with factoextra","text":"","code":"fviz_pca_ind(res_pca)"},{"path":"https://alexym1.github.io/booklet/articles/extensions.html","id":"variables","dir":"Articles","previous_headings":"","what":"Variables","title":"Data visualization with factoextra","text":"","code":"fviz_pca_var(res_pca)"},{"path":"https://alexym1.github.io/booklet/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Martinez. Author, maintainer.","code":""},{"path":"https://alexym1.github.io/booklet/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martinez (2025). booklet: Multivariate Exploratory Data Analysis. R package version 1.0.0, https://alexym1.github.io/booklet/, https://github.com/alexym1/booklet.","code":"@Manual{,   title = {booklet: Multivariate Exploratory Data Analysis},   author = {Alex Martinez},   year = {2025},   note = {R package version 1.0.0, https://alexym1.github.io/booklet/},   url = {https://github.com/alexym1/booklet}, }"},{"path":"https://alexym1.github.io/booklet/index.html","id":"booklet-","dir":"","previous_headings":"","what":"Multivariate Exploratory Data Analysis","title":"Multivariate Exploratory Data Analysis","text":"Multivariate exploratory data analysis R","code":""},{"path":"https://alexym1.github.io/booklet/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Multivariate Exploratory Data Analysis","text":"booklet ground-rewrite FactoMineR provides set functions multivariate exploratory data analysis. designed user-friendly version FactoMineR. main goal make package intuitive easier use. package still development, functions yet implemented. However, main functions already available.","code":""},{"path":"https://alexym1.github.io/booklet/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Multivariate Exploratory Data Analysis","text":"latest version can installed GitHub follows:","code":"install.packages(\"devtools\") devtools::install_github(\"alexym1/booklet\")"},{"path":"https://alexym1.github.io/booklet/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Multivariate Exploratory Data Analysis","text":"","code":"library(booklet)  # Get active individuals X_active <- pca_standardize_norm(iris[, -5]) head(X_active) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1   -0.8976739  1.01560199    -1.335752   -1.311052 #> 2   -1.1392005 -0.13153881    -1.335752   -1.311052 #> 3   -1.3807271  0.32731751    -1.392399   -1.311052 #> 4   -1.5014904  0.09788935    -1.279104   -1.311052 #> 5   -1.0184372  1.24503015    -1.335752   -1.311052 #> 6   -0.5353840  1.93331463    -1.165809   -1.048667 # Get eigs eigs <- pca_eigen(X_active) eigs$values #> [1] 434.856175 136.190540  21.866774   3.086511 # Get principal components ind_coords <- pca_ind_coords(eigs) head(ind_coords) #>       Dim.1      Dim.2       Dim.3        Dim.4 #> 1 -2.257141 -0.4784238  0.12727962  0.024087508 #> 2 -2.074013  0.6718827  0.23382552  0.102662845 #> 3 -2.356335  0.3407664 -0.04405390  0.028282305 #> 4 -2.291707  0.5953999 -0.09098530 -0.065735340 #> 5 -2.381863 -0.6446757 -0.01568565 -0.035802870 #> 6 -2.068701 -1.4842053 -0.02687825  0.006586116"},{"path":"https://alexym1.github.io/booklet/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Multivariate Exploratory Data Analysis","text":"Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute col contributions — ca_col_contrib","title":"Compute col contributions — ca_col_contrib","text":"Return col contributions correspondence component","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute col contributions — ca_col_contrib","text":"","code":"ca_col_contrib(col_coords, X, eigs)"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute col contributions — ca_col_contrib","text":"col_coords col coordinates X standardized matrix eigs eigs computed ca_weighted_eigen","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute col contributions — ca_col_contrib","text":"","code":"library(booklet)  X_scaled <- mtcars[, c(2, 8:11)] |>   ca_standardize()  eigs <- X_scaled |>   ca_weighted_eigen()  eigs |>   ca_col_coords() |>   ca_col_contrib(X_scaled, eigs) |>   head() #>         Dim.1      Dim.2      Dim.3     Dim.4     Dim.5 #> cyl  12.95900 14.2696518 18.3270863  8.716777 45.727483 #> vs   40.19612 23.8016793 19.0678267 13.701114  3.233256 #> am   23.97806 39.6016340 17.4599690 15.958028  3.002309 #> gear 12.97018  0.1376953  0.1829566 59.457431 27.251732 #> carb  9.89663 22.1893396 44.9621615  2.166650 20.785219"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute col coordinates — ca_col_coords","title":"Compute col coordinates — ca_col_coords","text":"Return Correspondence component columns","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute col coordinates — ca_col_coords","text":"","code":"ca_col_coords(eigs)  ca_col_sup_coords(X_sup, eigs)"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute col coordinates — ca_col_coords","text":"eigs eigs computed ca_weighted_eigen X_sup Supplementary dataset","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute col coordinates — ca_col_coords","text":"","code":"library(booklet)  mtcars[, c(2, 8:11)] |>   ca_standardize() |>   ca_weighted_eigen() |>   ca_col_coords() |>   head() #>           Dim.1      Dim.2       Dim.3       Dim.4        Dim.5 #> cyl  -0.1672822 -0.1189059 -0.08626184  0.02530453 7.605918e-17 #> vs    1.1079611 -0.5775225  0.33089575  0.11930724 7.605918e-17 #> am    0.8880385  0.7730615 -0.32859025  0.13361980 7.605918e-17 #> gear  0.2167846  0.0151303 -0.01116446 -0.08560812 7.605918e-17 #> carb -0.2168297  0.2199278  0.20040426  0.01871225 7.605918e-17"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_cos2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute col squared cosines — ca_col_cos2","title":"Compute col squared cosines — ca_col_cos2","text":"Return col squared cosines correspondence component","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_cos2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute col squared cosines — ca_col_cos2","text":"","code":"ca_col_cos2(col_coords, X)  ca_col_sup_cos2(col_coords, X_sup, X)"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_cos2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute col squared cosines — ca_col_cos2","text":"col_coords col coordinates X active dataset X_sup supplementary dataset","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_cos2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute col squared cosines — ca_col_cos2","text":"","code":"library(booklet)  X_scaled <- mtcars[, c(2, 8:11)] |>   ca_standardize()  X_scaled |>   ca_weighted_eigen() |>   ca_col_coords() |>   ca_col_cos2(X_scaled) |>   head() #>          Dim.1       Dim.2       Dim.3       Dim.4        Dim.5 #> cyl  0.5573995 0.281626699 0.148219312 0.012754513 1.152314e-31 #> vs   0.7286036 0.197961246 0.064986732 0.008448429 3.433568e-33 #> am   0.5215476 0.395237747 0.071406821 0.011807882 3.825901e-33 #> gear 0.8594986 0.004186812 0.002279625 0.134034951 1.058014e-31 #> carb 0.3459657 0.355922534 0.295535197 0.002576601 4.256951e-32"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_inertia.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute col inertia — ca_col_inertia","title":"Compute col inertia — ca_col_inertia","text":"Return col inertia correspondence component","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_inertia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute col inertia — ca_col_inertia","text":"","code":"ca_col_inertia(X)"},{"path":"https://alexym1.github.io/booklet/reference/ca_col_inertia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute col inertia — ca_col_inertia","text":"X standardized matrix","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_col_inertia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute col inertia — ca_col_inertia","text":"","code":"library(booklet)  mtcars[, c(2, 8:11)] |>   ca_standardize() |>   ca_col_inertia() #>        cyl         vs         am       gear       carb  #> 0.02295673 0.05447507 0.04539678 0.01490068 0.02824615"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute row contributions — ca_row_contrib","title":"Compute row contributions — ca_row_contrib","text":"Return row contributions correspondence component","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute row contributions — ca_row_contrib","text":"","code":"ca_row_contrib(row_coords, X, eigs)"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute row contributions — ca_row_contrib","text":"row_coords row coordinates X standardized matrix eigs eigs computed ca_weighted_eigen","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute row contributions — ca_row_contrib","text":"","code":"library(booklet)  X_scaled <- mtcars[, c(2, 8:11)] |>   ca_standardize()  eigs <- X_scaled |>   ca_weighted_eigen()  eigs |>   ca_row_coords() |>   ca_row_contrib(X_scaled, eigs) |>   head() #>                        Dim.1        Dim.2      Dim.3     Dim.4       Dim.5 #> Mazda RX4         0.02118797 7.498204e+00 0.35540886 0.4354296 39.44398296 #> Mazda RX4 Wag     0.02118797 7.498204e+00 0.35540886 0.4354296  9.15602300 #> Datsun 710        8.41786188 1.358916e-06 2.12979971 1.7224356  0.05418482 #> Hornet 4 Drive    0.62278581 1.075889e+01 0.02379275 2.0290777  0.20742461 #> Hornet Sportabout 2.29195452 1.879319e+00 5.36955419 0.4530751  0.63064242 #> Valiant           0.62278581 1.075889e+01 0.02379275 2.0290777  3.13783509"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute row coordinates — ca_row_coords","title":"Compute row coordinates — ca_row_coords","text":"Return Correspondence component individuals","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute row coordinates — ca_row_coords","text":"","code":"ca_row_coords(eigs)  ca_row_sup_coords(X_sup, eigs)"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute row coordinates — ca_row_coords","text":"eigs eigs computed ca_weighted_eigen X_sup Supplementary dataset","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute row coordinates — ca_row_coords","text":"","code":"library(booklet)  mtcars[, c(2, 8:11)] |>   ca_standardize() |>   ca_weighted_eigen() |>   ca_row_coords() |>   head() #>                         Dim.1         Dim.2       Dim.3       Dim.4 #> Mazda RX4         -0.02457511  0.3131570187 -0.04364386  0.02054784 #> Mazda RX4 Wag     -0.02457511  0.3131570187 -0.04364386  0.02054784 #> Datsun 710         0.57200653  0.0001556787 -0.12476066  0.04772303 #> Hornet 4 Drive     0.15558561 -0.4380428837 -0.01318653  0.05179715 #> Hornet Sportabout -0.27455398 -0.1684060608 -0.18222252 -0.02251471 #> Valiant            0.15558561 -0.4380428837 -0.01318653  0.05179715 #>                           Dim.5 #> Mazda RX4         -2.566495e-16 #> Mazda RX4 Wag      1.236526e-16 #> Datsun 710         1.110806e-17 #> Hornet 4 Drive    -2.173349e-17 #> Hornet Sportabout  3.485905e-17 #> Valiant           -8.453067e-17"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_cos2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute row squared cosines — ca_row_cos2","title":"Compute row squared cosines — ca_row_cos2","text":"Return row squared cosines correspondence component","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_cos2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute row squared cosines — ca_row_cos2","text":"","code":"ca_row_cos2(row_coords, X)  ca_row_sup_cos2(row_coords, X_sup, X)"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_cos2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute row squared cosines — ca_row_cos2","text":"row_coords row coordinates X Active standardized matrix X_sup Supplementary standardized matrix","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_cos2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute row squared cosines — ca_row_cos2","text":"","code":"library(booklet)  X_scaled <- mtcars[, c(2, 8:11)] |>   ca_standardize()  X_scaled |>   ca_weighted_eigen() |>   ca_row_coords() |>   ca_row_cos2(X_scaled) |>   head() #>                         Dim.1        Dim.2       Dim.3       Dim.4        Dim.5 #> Mazda RX4         0.005979667 9.709803e-01 0.018859594 0.004180407 6.521791e-31 #> Mazda RX4 Wag     0.005979667 9.709803e-01 0.018859594 0.004180407 1.513885e-31 #> Datsun 710        0.948287059 7.024187e-08 0.045112111 0.006600760 3.576136e-34 #> Hornet 4 Drive    0.110561339 8.763905e-01 0.000794192 0.012253952 2.157363e-33 #> Hornet Sportabout 0.548407031 2.063303e-01 0.241574790 0.003687908 8.840535e-33 #> Valiant           0.110561339 8.763905e-01 0.000794192 0.012253952 3.263571e-32"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_inertia.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute row inertia — ca_row_inertia","title":"Compute row inertia — ca_row_inertia","text":"Return row inertia correspondence component","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_inertia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute row inertia — ca_row_inertia","text":"","code":"ca_row_inertia(X)"},{"path":"https://alexym1.github.io/booklet/reference/ca_row_inertia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute row inertia — ca_row_inertia","text":"X standardized matrix","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_row_inertia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute row inertia — ca_row_inertia","text":"","code":"library(booklet)  mtcars[, c(2, 8:11)] |>   ca_standardize() |>   ca_row_inertia() #>           Mazda RX4       Mazda RX4 Wag          Datsun 710      Hornet 4 Drive  #>         0.003498785         0.003498785         0.008765303         0.005562120  #>   Hornet Sportabout             Valiant          Duster 360           Merc 240D  #>         0.004126748         0.005562120         0.003843387         0.004802599  #>            Merc 230            Merc 280           Merc 280C          Merc 450SE  #>         0.004802599         0.003132484         0.003132484         0.003346259  #>          Merc 450SL         Merc 450SLC  Cadillac Fleetwood Lincoln Continental  #>         0.003346259         0.003346259         0.003843387         0.003843387  #>   Chrysler Imperial            Fiat 128         Honda Civic      Toyota Corolla  #>         0.003843387         0.008765303         0.006386157         0.008765303  #>       Toyota Corona    Dodge Challenger         AMC Javelin          Camaro Z28  #>         0.005839108         0.004126748         0.004126748         0.003843387  #>    Pontiac Firebird           Fiat X1-9       Porsche 914-2        Lotus Europa  #>         0.004126748         0.008765303         0.006789708         0.007320642  #>      Ford Pantera L        Ferrari Dino       Maserati Bora          Volvo 142E  #>         0.002307205         0.006796543         0.009334000         0.006386157"},{"path":"https://alexym1.github.io/booklet/reference/ca_standardize.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization for CA — ca_standardize","title":"Data standardization for CA — ca_standardize","text":"Perform data standardization multivariate exploratory data analysis.","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_standardize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization for CA — ca_standardize","text":"","code":"ca_standardize(X, weighted_row = rep(1, nrow(X)))  ca_standardize_sup(X, type = c(\"row\", \"col\"), weighted_row = rep(1, nrow(X)))"},{"path":"https://alexym1.github.io/booklet/reference/ca_standardize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization for CA — ca_standardize","text":"X Active supplementary datasets weighted_row row weights type standardization supplementary rows cols","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_standardize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization for CA — ca_standardize","text":"","code":"library(booklet)  mtcars[, c(2, 8:11)] |>   ca_standardize() |>   head() #> $CA_scaled #>                             cyl        vs         am         gear        carb #> Mazda RX4           -0.12525253 -1.000000  1.2205128 -0.021468927  0.28296296 #> Mazda RX4 Wag       -0.12525253 -1.000000  1.2205128 -0.021468927  0.28296296 #> Datsun 710          -0.20477502  1.811688  2.0279720  0.334360555 -0.56262626 #> Hornet 4 Drive       0.19283747  1.811688 -1.0000000  0.000770416 -0.56262626 #> Hornet Sportabout    0.34576535 -1.000000 -1.0000000 -0.153194263 -0.25982906 #> Valiant              0.19283747  1.811688 -1.0000000  0.000770416 -0.56262626 #> Duster 360           0.16632997 -1.000000 -1.0000000 -0.266101695  0.28296296 #> Merc 240D           -0.20477502  1.811688 -1.0000000  0.334360555 -0.12525253 #> Merc 230            -0.20477502  1.811688 -1.0000000  0.334360555 -0.12525253 #> Merc 280            -0.12525253  1.061905 -1.0000000 -0.021468927  0.28296296 #> Merc 280C           -0.12525253  1.061905 -1.0000000 -0.021468927  0.28296296 #> Merc 450SE           0.24963925 -1.000000 -1.0000000 -0.213680387  0.03095238 #> Merc 450SL           0.24963925 -1.000000 -1.0000000 -0.213680387  0.03095238 #> Merc 450SLC          0.24963925 -1.000000 -1.0000000 -0.213680387  0.03095238 #> Cadillac Fleetwood   0.16632997 -1.000000 -1.0000000 -0.266101695  0.28296296 #> Lincoln Continental  0.16632997 -1.000000 -1.0000000 -0.266101695  0.28296296 #> Chrysler Imperial    0.16632997 -1.000000 -1.0000000 -0.266101695  0.28296296 #> Fiat 128            -0.20477502  1.811688  2.0279720  0.334360555 -0.56262626 #> Honda Civic         -0.27104377  1.577381  1.7756410  0.223163842 -0.19814815 #> Toyota Corolla      -0.20477502  1.811688  2.0279720  0.334360555 -0.56262626 #> Toyota Corona       -0.02805836  2.436508 -1.0000000  0.223163842 -0.46543210 #> Dodge Challenger     0.34576535 -1.000000 -1.0000000 -0.153194263 -0.25982906 #> AMC Javelin          0.34576535 -1.000000 -1.0000000 -0.153194263 -0.25982906 #> Camaro Z28           0.16632997 -1.000000 -1.0000000 -0.266101695  0.28296296 #> Pontiac Firebird     0.34576535 -1.000000 -1.0000000 -0.153194263 -0.25982906 #> Fiat X1-9           -0.20477502  1.811688  2.0279720  0.334360555 -0.56262626 #> Porsche 914-2       -0.27104377 -1.000000  1.7756410  0.528954802 -0.19814815 #> Lotus Europa        -0.32711733  1.379121  1.5621302  0.411342894 -0.25982906 #> Ford Pantera L      -0.02805836 -1.000000  0.8504274  0.019303202  0.06913580 #> Ferrari Dino        -0.27104377 -1.000000  0.8504274  0.019303202  0.60370370 #> Maserati Bora       -0.20477502 -1.000000  0.5139860 -0.166024653  0.74949495 #> Volvo 142E          -0.27104377  1.577381  1.7756410  0.223163842 -0.19814815 #>  #> $weighted_row #>           Mazda RX4       Mazda RX4 Wag          Datsun 710      Hornet 4 Drive  #>          0.03464203          0.03464203          0.02540416          0.02540416  #>   Hornet Sportabout             Valiant          Duster 360           Merc 240D  #>          0.03002309          0.02540416          0.03464203          0.02540416  #>            Merc 230            Merc 280           Merc 280C          Merc 450SE  #>          0.02540416          0.03464203          0.03464203          0.03233256  #>          Merc 450SL         Merc 450SLC  Cadillac Fleetwood Lincoln Continental  #>          0.03233256          0.03233256          0.03464203          0.03464203  #>   Chrysler Imperial            Fiat 128         Honda Civic      Toyota Corolla  #>          0.03464203          0.02540416          0.02771363          0.02540416  #>       Toyota Corona    Dodge Challenger         AMC Javelin          Camaro Z28  #>          0.02078522          0.03002309          0.03002309          0.03464203  #>    Pontiac Firebird           Fiat X1-9       Porsche 914-2        Lotus Europa  #>          0.03002309          0.02540416          0.02771363          0.03002309  #>      Ford Pantera L        Ferrari Dino       Maserati Bora          Volvo 142E  #>          0.04157044          0.04157044          0.05080831          0.02771363  #>  #> $weighted_col #>        cyl         vs         am       gear       carb  #> 0.45727483 0.03233256 0.03002309 0.27251732 0.20785219  #>"},{"path":"https://alexym1.github.io/booklet/reference/ca_weighted_eigen.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute eigenvalues and eigenvectors for CA — ca_weighted_eigen","title":"Compute eigenvalues and eigenvectors for CA — ca_weighted_eigen","text":"Return eigenvalues eigenvectors matrix","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_weighted_eigen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute eigenvalues and eigenvectors for CA — ca_weighted_eigen","text":"","code":"ca_weighted_eigen(X)"},{"path":"https://alexym1.github.io/booklet/reference/ca_weighted_eigen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute eigenvalues and eigenvectors for CA — ca_weighted_eigen","text":"X X_active","code":""},{"path":"https://alexym1.github.io/booklet/reference/ca_weighted_eigen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute eigenvalues and eigenvectors for CA — ca_weighted_eigen","text":"","code":"library(booklet)  mtcars[, c(2, 8:11)] |>   ca_standardize() |>   ca_weighted_eigen() |>   head() #> $values #> [1] 9.874269e-02 4.530753e-02 1.856613e-02 3.359061e-03 5.784999e-33 #>  #> $vectors #>           Dim.1       Dim.2       Dim.3      Dim.4 Dim.5 #> cyl  -0.5323498 -0.55862201 -0.63307923  0.4366056     1 #> vs    3.5259164 -2.71321200  2.42845761  2.0585332     1 #> am    2.8260464  3.63185771 -2.41153742  2.3054828     1 #> gear  0.6898839  0.07108246 -0.08193641 -1.4770868     1 #> carb -0.6900274  1.03322494  1.47077515  0.3228621     1 #>  #> $U #>                           Dim.1         Dim.2        Dim.3       Dim.4 #> Mazda RX4           -0.07820652  1.4712177262 -0.320304062  0.35453351 #> Mazda RX4 Wag       -0.07820652  1.4712177262 -0.320304062  0.35453351 #> Datsun 710           1.82032320  0.0007313814 -0.915623619  0.82341563 #> Hornet 4 Drive       0.49512740 -2.0579339335 -0.096776496  0.89371068 #> Hornet Sportabout   -0.87372602 -0.7911749283 -1.337338621 -0.38846990 #> Valiant              0.49512740 -2.0579339335 -0.096776496  0.89371068 #> Duster 360          -1.05001677 -0.0384701714  0.280183828  0.40608321 #> Merc 240D            0.80310804 -1.1091256142  1.674599360 -2.28642414 #> Merc 230             0.80310804 -1.1091256142  1.674599360 -2.28642414 #> Merc 280             0.07027542 -0.5160662826  2.047757539  0.07047484 #> Merc 280C            0.07027542 -0.5160662826  2.047757539  0.07047484 #> Merc 450SE          -0.96816750 -0.3879402371 -0.470808738  0.03718355 #> Merc 450SL          -0.96816750 -0.3879402371 -0.470808738  0.03718355 #> Merc 450SLC         -0.96816750 -0.3879402371 -0.470808738  0.03718355 #> Cadillac Fleetwood  -1.05001677 -0.0384701714  0.280183828  0.40608321 #> Lincoln Continental -1.05001677 -0.0384701714  0.280183828  0.40608321 #> Chrysler Imperial   -1.05001677 -0.0384701714  0.280183828  0.40608321 #> Fiat 128             1.82032320  0.0007313814 -0.915623619  0.82341563 #> Honda Civic          1.48563737  0.4051796620  0.060184995  1.21902087 #> Toyota Corolla       1.82032320  0.0007313814 -0.915623619  0.82341563 #> Toyota Corona        0.98162723 -1.9320488099  0.914205323 -0.58173487 #> Dodge Challenger    -0.87372602 -0.7911749283 -1.337338621 -0.38846990 #> AMC Javelin         -0.87372602 -0.7911749283 -1.337338621 -0.38846990 #> Camaro Z28          -1.05001677 -0.0384701714  0.280183828  0.40608321 #> Pontiac Firebird    -0.87372602 -0.7911749283 -1.337338621 -0.38846990 #> Fiat X1-9            1.82032320  0.0007313814 -0.915623619  0.82341563 #> Porsche 914-2        0.73353410  1.4952354301 -1.475138814 -3.86462630 #> Lotus Europa         1.54023834  0.3997002099  0.009298864 -0.83519075 #> Ford Pantera L      -0.13143842  0.9529654832 -0.816571389 -0.28340535 #> Ferrari Dino        -0.18719229  1.7839130097  0.899014659 -0.50146503 #> Maserati Bora       -0.50679628  1.6622646223  1.294456091  0.78097352 #> Volvo 142E           1.48563737  0.4051796620  0.060184995  1.21902087 #>                          Dim.5 #> Mazda RX4           -3.3743389 #> Mazda RX4 Wag        1.6257425 #> Datsun 710           0.1460449 #> Hornet 4 Drive      -0.2857444 #> Hornet Sportabout    0.4583148 #> Valiant             -1.1113802 #> Duster 360           0.9369595 #> Merc 240D            0.1933424 #> Merc 230             0.1933424 #> Merc 280             0.4773658 #> Merc 280C            0.4773658 #> Merc 450SE           0.2120136 #> Merc 450SL           0.2120136 #> Merc 450SLC          0.2120136 #> Cadillac Fleetwood   0.9369595 #> Lincoln Continental  0.9369595 #> Chrysler Imperial    0.9369595 #> Fiat 128             0.5242171 #> Honda Civic          1.2050212 #> Toyota Corolla       0.5192154 #> Toyota Corona        1.0706953 #> Dodge Challenger     0.3753483 #> AMC Javelin          0.3753483 #> Camaro Z28           0.9182862 #> Pontiac Firebird     0.3753483 #> Fiat X1-9            0.5192154 #> Porsche 914-2        0.6469550 #> Lotus Europa         0.8252759 #> Ford Pantera L       1.6138071 #> Ferrari Dino        -0.4355526 #> Maserati Bora        0.5109886 #> Volvo 142E           1.2294165 #>"},{"path":"https://alexym1.github.io/booklet/reference/facto_ca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform CA with FactoMineR's style — facto_ca","title":"Perform CA with FactoMineR's style — facto_ca","text":"Return CA results FactoMineR's style","code":""},{"path":"https://alexym1.github.io/booklet/reference/facto_ca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform CA with FactoMineR's style — facto_ca","text":"","code":"facto_ca(X, ncp = 5, row_sup = NULL, col_sup = NULL, weighted_row = NULL)"},{"path":"https://alexym1.github.io/booklet/reference/facto_ca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform CA with FactoMineR's style — facto_ca","text":"X data frame n rows (individuals) p columns (numeric variables) ncp integer, number components keep (value set default) row_sup vector indicating indexes supplementary rows col_sup vector indicating indexes supplementary cols weighted_row row weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/facto_ca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform CA with FactoMineR's style — facto_ca","text":"","code":"library(booklet) res <- facto_ca(X = mtcars[, c(2, 8:11)], ncp = 2)"},{"path":"https://alexym1.github.io/booklet/reference/facto_mfa.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform MFA with FactoMineR's style — facto_mfa","title":"Perform MFA with FactoMineR's style — facto_mfa","text":"Return MFA results FactoMineR's style","code":""},{"path":"https://alexym1.github.io/booklet/reference/facto_mfa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform MFA with FactoMineR's style — facto_mfa","text":"","code":"facto_mfa(X, groups, ncp = 2)"},{"path":"https://alexym1.github.io/booklet/reference/facto_mfa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform MFA with FactoMineR's style — facto_mfa","text":"X data frame n rows (individuals) p columns (numeric variables) groups vector indicating group variable ncp integer, number components keep (value set default)","code":""},{"path":"https://alexym1.github.io/booklet/reference/facto_mfa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform MFA with FactoMineR's style — facto_mfa","text":"","code":"library(booklet)  res <- facto_mfa(X = iris[, -c(5)], groups = c(2, 2), ncp = 2)"},{"path":"https://alexym1.github.io/booklet/reference/facto_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform PCA with FactoMineR's style — facto_pca","title":"Perform PCA with FactoMineR's style — facto_pca","text":"Return PCA results FactoMineR's style","code":""},{"path":"https://alexym1.github.io/booklet/reference/facto_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform PCA with FactoMineR's style — facto_pca","text":"","code":"facto_pca(   X,   ncp = 5,   scale.unit = TRUE,   ind_sup = NULL,   quanti_sup = NULL,   weighted_col = NULL )"},{"path":"https://alexym1.github.io/booklet/reference/facto_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform PCA with FactoMineR's style — facto_pca","text":"X data frame n rows (individuals) p columns (numeric variables) ncp integer, number components keep (value set default) scale.unit boolean, TRUE (value set default) data scaled unit variance ind_sup vector indicating indexes supplementary individuals quanti_sup vector indicating indexes quantitative supplementary variables weighted_col column weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/facto_pca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform PCA with FactoMineR's style — facto_pca","text":"","code":"library(booklet)  res <- facto_pca(iris[, -5], ncp = 2, ind_sup = 1, quanti_sup = 1)"},{"path":"https://alexym1.github.io/booklet/reference/pca_eigen.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute eigenvalues and eigenvectors — pca_eigen","title":"Compute eigenvalues and eigenvectors — pca_eigen","text":"Return eigenvalues eigenvectors matrix","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_eigen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute eigenvalues and eigenvectors — pca_eigen","text":"","code":"pca_eigen(X)  pca_weighted_eigen(   X,   weighted_row = rep(1, nrow(X))/nrow(X),   weighted_col = rep(1, ncol(X)) )"},{"path":"https://alexym1.github.io/booklet/reference/pca_eigen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute eigenvalues and eigenvectors — pca_eigen","text":"X X_active weighted_row row weights weighted_col column weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_eigen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute eigenvalues and eigenvectors — pca_eigen","text":"Standardization depends need perform factor analysis. implemented two types: pca_weighted_eigen: default method FactoMineR compute eigvalues, eigvectors U matrix. pca_eigen: standard method compute eigenvalues, eigenvectors.","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_eigen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute eigenvalues and eigenvectors — pca_eigen","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   pca_eigen() #> $values #> [1] 434.856175 136.190540  21.866774   3.086511 #>  #> $vectors #>                   Dim.1       Dim.2      Dim.3      Dim.4 #> Sepal.Length  0.5210659 -0.37741762  0.7195664  0.2612863 #> Sepal.Width  -0.2693474 -0.92329566 -0.2443818 -0.1235096 #> Petal.Length  0.5804131 -0.02449161 -0.1421264 -0.8014492 #> Petal.Width   0.5648565 -0.06694199 -0.6342727  0.5235971 #>  #> $U #>             Dim.1         Dim.2        Dim.3        Dim.4 #> 1   -0.1082395313 -0.0409957970  0.027218646  0.013710648 #> 2   -0.0994577561  0.0575731483  0.050003401  0.058435855 #> 3   -0.1129963029  0.0292000319 -0.009420891  0.016098333 #> 4   -0.1098970995  0.0510193897 -0.019457133 -0.037416661 #> 5   -0.1142204597 -0.0552417975 -0.003354363 -0.020379051 #> 6   -0.0992030036 -0.1271804935 -0.005747892  0.003748828 #> 7   -0.1168102651 -0.0040689659 -0.071500545 -0.020862814 #> 8   -0.1067170177 -0.0190575546  0.018904131 -0.013962469 #> 9   -0.1115821423  0.0952525283 -0.030920984 -0.015237265 #> 10  -0.1043980945  0.0400552488  0.054086370 -0.022634909 #> 11  -0.1035369360 -0.0891344989  0.057265395  0.009491723 #> 12  -0.1111754327 -0.0113653128 -0.019983394 -0.075725286 #> 13  -0.1060289608  0.0622312605  0.049215308  0.001375727 #> 14  -0.1258467928  0.0821157306 -0.038534006 -0.010900993 #> 15  -0.1050869241 -0.1588547893  0.100791840  0.110471545 #> 16  -0.1081206062 -0.2294172328 -0.006506294  0.028667844 #> 17  -0.1055097633 -0.1267049550  0.001139014  0.107116335 #> 18  -0.1046858790 -0.0417483459  0.009423839  0.052810307 #> 19  -0.0907406226 -0.1199930706  0.079785722  0.034659809 #> 20  -0.1119993170 -0.0963219219 -0.028268219 -0.021419258 #> 21  -0.0914934282 -0.0349175769  0.089792273  0.006195658 #> 22  -0.1054822888 -0.0789229070 -0.034072915  0.033809630 #> 23  -0.1325974291 -0.0391440060 -0.070799052  0.011146576 #> 24  -0.0869217526 -0.0073069701 -0.007350733  0.085742453 #> 25  -0.1064453629 -0.0117219667 -0.025148574 -0.153250916 #> 26  -0.0932868238  0.0534298158  0.065142846  0.024712572 #> 27  -0.0980330233 -0.0206815371 -0.018407209  0.038394972 #> 28  -0.1036452889 -0.0450202449  0.044079818  0.005829242 #> 29  -0.1022586028 -0.0267497965  0.057791656  0.047800348 #> 30  -0.1082662331  0.0288433780 -0.014586072 -0.061427297 #> 31  -0.1022853047  0.0430893785  0.015986938 -0.027337597 #> 32  -0.0875395035 -0.0361849054  0.057646113  0.136078728 #> 33  -0.1249791972 -0.1531770786 -0.010066038 -0.130045793 #> 34  -0.1169129535 -0.1836789964  0.017619469 -0.027352078 #> 35  -0.1008444422  0.0393026999  0.036291563  0.016464749 #> 36  -0.1055203356  0.0176022268  0.048049532  0.095821620 #> 37  -0.0977460115 -0.0564991653  0.103271968  0.111394405 #> 38  -0.1207916644 -0.0505836854 -0.004142455 -0.077439180 #> 39  -0.1161222082  0.0772198492 -0.041189367 -0.005524618 #> 40  -0.1036994653 -0.0229631179  0.037487030  0.003998001 #> 41  -0.1092801213 -0.0377238980 -0.007437333  0.060691714 #> 42  -0.0888073715  0.1996226835  0.043529498  0.164440117 #> 43  -0.1220489602  0.0409167217 -0.065169588 -0.037783077 #> 44  -0.0938890947 -0.0403381986 -0.065986933  0.100465059 #> 45  -0.1021389050 -0.0975500093 -0.052949932 -0.085687106 #> 46  -0.0989216563  0.0607261627  0.013625695  0.079575044 #> 47  -0.1139762794 -0.0956882576 -0.012195139 -0.086360793 #> 48  -0.1144371654  0.0329867105 -0.029725517 -0.027704013 #> 49  -0.1065544885 -0.0852289357  0.038682496 -0.008468747 #> 50  -0.1053303317 -0.0007871062  0.032615968  0.028008637 #> 51   0.0526586881 -0.0737005873  0.145909396  0.019761239 #> 52   0.0349536459 -0.0507819874  0.020060649  0.002781831 #> 53   0.0593115438 -0.0526337785  0.118078347  0.005345903 #> 54   0.0194753038  0.1498316767  0.004923799  0.037310732 #> 55   0.0514013923  0.0177998198  0.084882263  0.059417342 #> 56   0.0185769784  0.0506683081 -0.026469588 -0.136623859 #> 57   0.0356797497 -0.0660183061 -0.031750621 -0.043891963 #> 58  -0.0232911731  0.1582033316 -0.053127198 -0.022987157 #> 59   0.0443482642 -0.0027522095  0.127064665 -0.016950735 #> 60   0.0005461049  0.0883084471 -0.114858419 -0.016146060 #> 61  -0.0052667368  0.2266662541  0.009972690  0.007806478 #> 62   0.0210625660  0.0054056103 -0.043708445  0.022763570 #> 63   0.0268654851  0.1507130709  0.163212825  0.025943335 #> 64   0.0343908442  0.0159041732  0.014633637 -0.093495303 #> 65  -0.0015941595  0.0374922694 -0.041547057  0.061863332 #> 66   0.0418393370 -0.0434756799  0.107315989  0.059534688 #> 67   0.0167399785  0.0167656461 -0.104622322 -0.108643470 #> 68   0.0075901902  0.0676474939  0.064374748 -0.116465628 #> 69   0.0585523010  0.1385447768  0.102795955  0.128153185 #> 70   0.0078821098  0.1112469683  0.036837818 -0.029344698 #> 71   0.0352569104 -0.0338684718 -0.131403446 -0.047247173 #> 72   0.0227637384  0.0356404784  0.056470641  0.064427405 #> 73   0.0589864852  0.0797089836  0.078521616 -0.005641540 #> 74   0.0302469157  0.0355608348  0.062213361 -0.155565391 #> 75   0.0335830895  0.0054155709  0.095064047  0.024653955 #> 76   0.0417851606 -0.0214185528  0.100723201  0.057703448 #> 77   0.0600537772  0.0065979096  0.154982313  0.022515340 #> 78   0.0649238094 -0.0282950706  0.055591320  0.037911633 #> 79   0.0317735642  0.0192949569 -0.018300615 -0.020672361 #> 80  -0.0019241258  0.0904179288  0.068112319  0.036754391 #> 81   0.0062512434  0.1334229800  0.031966756 -0.005334061 #> 82   0.0011209012  0.1342944135  0.051483289 -0.018591843 #> 83   0.0115441149  0.0663801654  0.032228588  0.013417442 #> 84   0.0507141081  0.0541322276 -0.022445561 -0.104365504 #> 85   0.0107048737  0.0245767726 -0.141788119 -0.144564410 #> 86   0.0205103365 -0.0722154109 -0.096045974 -0.062218849 #> 87   0.0501230591 -0.0445848827  0.084356003  0.021108717 #> 88   0.0499224830  0.1181116322  0.146700084  0.077626985 #> 89   0.0033259142  0.0187462824 -0.062145801 -0.083475281 #> 90   0.0135485518  0.1135285492 -0.019056421  0.005052273 #> 91   0.0133382833  0.0956539957 -0.020138632 -0.153544122 #> 92   0.0298507783 -0.0021285059  0.004365253 -0.083782656 #> 93   0.0160841808  0.0844128445  0.042496972  0.003704795 #> 94  -0.0173102447  0.1724493321 -0.022554188  0.011102543 #> 95   0.0137927321  0.0730820891 -0.027897197 -0.060929469 #> 96   0.0043665043  0.0154743834 -0.027489822 -0.130456346 #> 97   0.0108835326  0.0328733983 -0.033294519 -0.075227458 #> 98   0.0275479846  0.0132266974  0.057898249 -0.011266985 #> 99  -0.0213958618  0.1318447464 -0.040581137  0.113429843 #> 100  0.0122702186  0.0511438467 -0.019582682 -0.033256352 #> 101  0.0881595893 -0.0743367465 -0.214286328 -0.027939433 #> 102  0.0553399601  0.0596857075 -0.112995779 -0.022987468 #> 103  0.1053988377 -0.0479974810  0.043248148  0.033575257 #> 104  0.0688307676  0.0040128894 -0.034875332 -0.133752619 #> 105  0.0892704855 -0.0251977657 -0.084322325 -0.009246027 #> 106  0.1315234294 -0.0683574897  0.124110556 -0.057515529 #> 107  0.0175412961  0.1333573099 -0.210341675 -0.075521296 #> 108  0.1100431214 -0.0358749356  0.138901570 -0.135041056 #> 109  0.0959078612  0.0607591222  0.083973252 -0.049077575 #> 110  0.1080041231 -0.1640603917 -0.084732296  0.059475232 #> 111  0.0651995994 -0.0591636030 -0.060660846  0.061189334 #> 112  0.0765986545  0.0360145587 -0.004941839  0.033091599 #> 113  0.0900394207 -0.0358052527 -0.005613642  0.083061354 #> 114  0.0602261220  0.0992607340 -0.123671537  0.056252056 #> 115  0.0701448455  0.0377713992 -0.213959923  0.156381596 #> 116  0.0759963837 -0.0577534557 -0.136071618  0.108844086 #> 117  0.0703258066 -0.0218309163 -0.007977918 -0.088119032 #> 118  0.1159643160 -0.2183469966  0.027256038 -0.155331113 #> 119  0.1582318602 -0.0015185496  0.149899103  0.025635545 #> 120  0.0604006459  0.1457614800  0.057021524 -0.036977139 #> 121  0.0973909055 -0.0777568105 -0.050044030  0.095278929 #> 122  0.0467417517  0.0488304906 -0.176503041  0.015745775 #> 123  0.1384907715 -0.0353262612  0.182746756 -0.072238136 #> 124  0.0637206901  0.0411482094  0.001156975  0.079398977 #> 125  0.0812851201 -0.0865921500 -0.063610325 -0.034970557 #> 126  0.0934053712 -0.0860674097  0.089513520 -0.123863584 #> 127  0.0561630717  0.0270210935 -0.027694307  0.071151154 #> 128  0.0487954572 -0.0054953554 -0.071979154 -0.004909651 #> 129  0.0854726529  0.0160012432 -0.057686743  0.017636056 #> 130  0.0890714388 -0.0480214151  0.152526807 -0.118120689 #> 131  0.1164243223 -0.0221437147  0.155123226 -0.010167944 #> 132  0.1101620465 -0.2242963714  0.105176629 -0.120083860 #> 133  0.0890263052  0.0152486943 -0.075481550  0.056735715 #> 134  0.0532497371  0.0250165230  0.039107832 -0.105712982 #> 135  0.0574711817  0.0692889027  0.035108428 -0.277684505 #> 136  0.1337648367 -0.0731737275  0.115712475  0.167853641 #> 137  0.0753358013 -0.0912602228 -0.201594725  0.020199186 #> 138  0.0643448781 -0.0360769168 -0.038550928 -0.122208731 #> 139  0.0442012149 -0.0014709075 -0.088840326  0.002971755 #> 140  0.0885169072 -0.0577434950  0.002700873  0.110734472 #> 141  0.0962961390 -0.0524277845 -0.091292798  0.140428754 #> 142  0.0908941419 -0.0588919389 -0.027723560  0.266459419 #> 143  0.0553399601  0.0596857075 -0.112995779 -0.022987468 #> 144  0.0975267330 -0.0740890166 -0.072070383  0.025634706 #> 145  0.0954997292 -0.0896023456 -0.134789552  0.121428077 #> 146  0.0893991030 -0.0330481333 -0.054620974  0.220825832 #> 147  0.0747777843  0.0765799034  0.005620663  0.124915218 #> 148  0.0727030413 -0.0229793601 -0.038402352  0.067605916 #> 149  0.0656112167 -0.0863643414 -0.198939364  0.014822811 #> 150  0.0459137323  0.0020780018 -0.112588405 -0.092514345 #>"},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute individual contributions — pca_ind_contrib","title":"Compute individual contributions — pca_ind_contrib","text":"Return individual contributions principal component","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute individual contributions — pca_ind_contrib","text":"","code":"pca_ind_contrib(   ind_coords,   eigs,   weighted_row = rep(1, nrow(ind_coords))/nrow(ind_coords) )"},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute individual contributions — pca_ind_contrib","text":"ind_coords individual coordinates eigs eigs computed pca_eigen pca_weighted_eigen weighted_row row weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_contrib.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute individual contributions — pca_ind_contrib","text":"want compute contributions individuals principal components, change weighted_col argument rep(1, nrow(ind_cos2)).","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute individual contributions — pca_ind_contrib","text":"","code":"library(booklet)  eigs <- iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen()  eigs |>   pca_ind_coords() |>   pca_ind_contrib(eigs) |>   head() #>       Dim.1      Dim.2       Dim.3       Dim.4 #> 1 1.1715796 0.16806554 0.074085470 0.018798188 #> 2 0.9891845 0.33146674 0.250034006 0.341474919 #> 3 1.2768164 0.08526419 0.008875320 0.025915633 #> 4 1.2077372 0.26029781 0.037858004 0.140000650 #> 5 1.3046313 0.30516562 0.001125175 0.041530572 #> 6 0.9841236 1.61748779 0.003303827 0.001405371"},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute coordinates for individuals — pca_ind_coords","title":"Compute coordinates for individuals — pca_ind_coords","text":"Return principal component individuals","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute coordinates for individuals — pca_ind_coords","text":"","code":"pca_ind_coords(eigs)"},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute coordinates for individuals — pca_ind_coords","text":"eigs eigs computed pca_eigen pca_weighted_eigen","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute coordinates for individuals — pca_ind_coords","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen() |>   pca_ind_coords() |>   head() #>       Dim.1      Dim.2       Dim.3        Dim.4 #> 1 -2.257141  0.4784238 -0.12727962 -0.024087508 #> 2 -2.074013 -0.6718827 -0.23382552 -0.102662845 #> 3 -2.356335 -0.3407664  0.04405390 -0.028282305 #> 4 -2.291707 -0.5953999  0.09098530  0.065735340 #> 5 -2.381863  0.6446757  0.01568565  0.035802870 #> 6 -2.068701  1.4842053  0.02687825 -0.006586116"},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_cos2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute individual squared cosines — pca_ind_cos2","title":"Compute individual squared cosines — pca_ind_cos2","text":"Return individual squared cosines principal component","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_cos2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute individual squared cosines — pca_ind_cos2","text":"","code":"pca_ind_cos2(ind_coords, weighted_col = rep(1, ncol(ind_coords)))"},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_cos2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute individual squared cosines — pca_ind_cos2","text":"ind_coords individual coordinates weighted_col column weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_ind_cos2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute individual squared cosines — pca_ind_cos2","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen() |>   pca_ind_coords() |>   pca_ind_cos2() |>   head() #>       Dim.1      Dim.2        Dim.3        Dim.4 #> 1 0.9539975 0.04286032 0.0030335249 1.086460e-04 #> 2 0.8927725 0.09369248 0.0113475382 2.187482e-03 #> 3 0.9790410 0.02047578 0.0003422122 1.410446e-04 #> 4 0.9346682 0.06308947 0.0014732682 7.690193e-04 #> 5 0.9315095 0.06823959 0.0000403979 2.104697e-04 #> 6 0.6600989 0.33978301 0.0001114335 6.690714e-06"},{"path":"https://alexym1.github.io/booklet/reference/pca_standardize_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Data standardization for PCA — pca_standardize_norm","title":"Data standardization for PCA — pca_standardize_norm","text":"Perform data standardization multivariate exploratory data analysis.","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_standardize_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data standardization for PCA — pca_standardize_norm","text":"","code":"pca_standardize_norm(X, center = TRUE, scale = TRUE)  pca_standardize(X, scale = TRUE, weighted_row = rep(1, nrow(X))/nrow(X))"},{"path":"https://alexym1.github.io/booklet/reference/pca_standardize_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data standardization for PCA — pca_standardize_norm","text":"X matrix center centering mean scale scaling standard deviation weighted_row row weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_standardize_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data standardization for PCA — pca_standardize_norm","text":"Standardization depends need perform factor analysis. Two methods implemented: standardize: standardization performed centering data matrix dividing square root sum squares weights. method used FactoMineR::PCA(). standardize_norm: standardization performed centering scaling data matrix. (X - µ) / S, µ mean S standard deviation.","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_standardize_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data standardization for PCA — pca_standardize_norm","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width #> 1   -0.8976739  1.01560199    -1.335752   -1.311052 #> 2   -1.1392005 -0.13153881    -1.335752   -1.311052 #> 3   -1.3807271  0.32731751    -1.392399   -1.311052 #> 4   -1.5014904  0.09788935    -1.279104   -1.311052 #> 5   -1.0184372  1.24503015    -1.335752   -1.311052 #> 6   -0.5353840  1.93331463    -1.165809   -1.048667"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_contrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable contributions — pca_var_contrib","title":"Compute variable contributions — pca_var_contrib","text":"Return variable contributions","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_contrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable contributions — pca_var_contrib","text":"","code":"pca_var_contrib(var_cos2, eigs, weighted_col = rep(1, ncol(var_cos2)))"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_contrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable contributions — pca_var_contrib","text":"var_cos2 variable coordinates eigs eigs computed pca_eigen pca_weighted_eigen weighted_col column weights","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_contrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable contributions — pca_var_contrib","text":"","code":"library(booklet)  eigs <- iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen()  eigs |>   pca_var_coords() |>   pca_var_cos2() |>   pca_var_contrib(eigs) |>   head() #>                  Dim.1       Dim.2     Dim.3     Dim.4 #> Sepal.Length 27.150969 14.24440565 51.777574  6.827052 #> Sepal.Width   7.254804 85.24748749  5.972245  1.525463 #> Petal.Length 33.687936  0.05998389  2.019990 64.232089 #> Petal.Width  31.906291  0.44812296 40.230191 27.415396"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable coordinates — pca_var_coords","title":"Compute variable coordinates — pca_var_coords","text":"Return variable coordinates","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable coordinates — pca_var_coords","text":"","code":"pca_var_coords(eigs)"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable coordinates — pca_var_coords","text":"eigs eigs computed pca_eigen pca_weighted_eigen","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable coordinates — pca_var_coords","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen() |>   pca_var_coords() |>   head() #>                   Dim.1      Dim.2       Dim.3       Dim.4 #> Sepal.Length  0.8871966 0.35962511 -0.27473727 -0.03748046 #> Sepal.Width  -0.4586063 0.87976896  0.09330729  0.01771695 #> Petal.Length  0.9882445 0.02333701  0.05426520  0.11496464 #> Petal.Width   0.9617570 0.06378616  0.24217136 -0.07510788"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable correlation — pca_var_cor","title":"Compute variable correlation — pca_var_cor","text":"Return variable correlation","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable correlation — pca_var_cor","text":"","code":"pca_var_cor(eigs)"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable correlation — pca_var_cor","text":"eigs eigs computed pca_eigen pca_weighted_eigen","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable correlation — pca_var_cor","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen() |>   pca_var_cor() |>   head() #>                   Dim.1      Dim.2       Dim.3       Dim.4 #> Sepal.Length  0.8871966 0.35962511 -0.27473727 -0.03748046 #> Sepal.Width  -0.4586063 0.87976896  0.09330729  0.01771695 #> Petal.Length  0.9882445 0.02333701  0.05426520  0.11496464 #> Petal.Width   0.9617570 0.06378616  0.24217136 -0.07510788"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cos2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute variable squared cosines — pca_var_cos2","title":"Compute variable squared cosines — pca_var_cos2","text":"Return variable squared cosines","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cos2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute variable squared cosines — pca_var_cos2","text":"","code":"pca_var_cos2(var_coords)"},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cos2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute variable squared cosines — pca_var_cos2","text":"var_coords variable coordinates","code":""},{"path":"https://alexym1.github.io/booklet/reference/pca_var_cos2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute variable squared cosines — pca_var_cos2","text":"","code":"library(booklet)  iris[, -5] |>   pca_standardize_norm() |>   pca_weighted_eigen() |>   pca_var_coords() |>   pca_var_cos2() |>   head() #>                  Dim.1        Dim.2       Dim.3        Dim.4 #> Sepal.Length 0.7871178 0.1293302201 0.075480568 0.0014047846 #> Sepal.Width  0.2103198 0.7739934251 0.008706250 0.0003138904 #> Petal.Length 0.9766271 0.0005446159 0.002944712 0.0132168684 #> Petal.Width  0.9249765 0.0040686739 0.058646967 0.0056411941"},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-100","dir":"Changelog","previous_headings":"","what":"booklet 1.0.0","title":"booklet 1.0.0","text":"Change branding Release CRAN","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-050","dir":"Changelog","previous_headings":"","what":"booklet 0.5.0","title":"booklet 0.5.0","text":"Transform matrix “tidyverse” friendly data.frame output (#14) Update unit tests better testing coverage Update vignettes","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-040","dir":"Changelog","previous_headings":"","what":"booklet 0.4.0","title":"booklet 0.4.0","text":"Add necessary functions perform Correspondence Analysis (CA) (#9) Replace standardize() standardize_norm() pca_standardize() pca_standardize_norm() Replace get_eig() get_weighted_eigen() pca_eigen() pca_weighted_eigen() Update unit tests better testing coverage Update _pkgdown.yml facto_pca updated return outputs FactoMineR::PCA() Update CONTRIBUTING.md coverage testing","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-030","dir":"Changelog","previous_headings":"","what":"booklet 0.3.0","title":"booklet 0.3.0","text":"Add facto_mfa() function perform Multiple Factor Analysis (MFA) (#7) Update unit tests better testing coverage Update _pkgdown.yml","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-021","dir":"Changelog","previous_headings":"","what":"booklet 0.2.1","title":"booklet 0.2.1","text":"get_weighted_eigen() now returns U matrix expected (#4) pca_ind_coords() & pca_var_coords() return signs corresponding coordinates FactoMineR. facto_pca() updated. Now, returns output FactoMineR::PCA().","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-020","dir":"Changelog","previous_headings":"","what":"booklet 0.2.0","title":"booklet 0.2.0","text":"facto_pca() wrapper function mimics FactoMineR::PCA(). get_weighted_eigen() calculates eigs FactoMineR, whereas get_eigen() calculates eigs unweighted case. eigvalues() eigvectors() deprecated. pca_var_cos2() now works expected. Comparison.Rmd updated allowing compute either supplementary individual coordinates supplementary variable coordinates.","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-011","dir":"Changelog","previous_headings":"","what":"booklet 0.1.1","title":"booklet 0.1.1","text":"standardize() now works expected scale = FALSE (#1) new argument called weights added get_eigen(), eigvalues() eigvectors() functions. argument allows weight variables PCA. standardize_norm() replaced standardize(type = \"norm\", ...) Codecov badge fixed now use master instead main branch coding coverage.","code":""},{"path":"https://alexym1.github.io/booklet/news/index.html","id":"booklet-010","dir":"Changelog","previous_headings":"","what":"booklet 0.1.0","title":"booklet 0.1.0","text":"get_eig() wrapper function returns eigenvalues eigenvectors. standardize() wrapper function standardizes data. pca_ind_*() allows compute coordinates, cos2 contribution active individuals PCA. pca_var_*() allows compute coordinates, cos2 contribution active variables PCA. Unit tests designed functions mentioned . Website built deployed using pkgdown.","code":""}]
